# This is a basic workflow to help you get started with Actions

name: Run CI

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the "main" branch
    push:
        branches: ["main", "dockerization"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # CACHE SETUP
            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v2

            - name: Cache Docker layers
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-
            # END CACHE SETUP
            - name: Install Go
              uses: actions/setup-go@v2
              with:
                  go-version: 1.22.0

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Fetch required Go modules
              run: go mod download

            - name: Build
              run: go build -v ./...

            - name: Build Docker image
              uses: docker/build-push-action@v2
              with:
                  builder: ${{ steps.buildx.outputs.name }}
                  push: false
                  load: true
                  tags: ${{ github.event.repository.name }}:latest, ${{ github.repository }}:latest
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache

            - name: Run functional tests
              run: go test -v ./...

